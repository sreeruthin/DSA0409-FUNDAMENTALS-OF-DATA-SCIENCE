from sklearn.neighbors import KNeighborsClassifier

X = np.array([[25, 1, 0, 0], [30, 0, 1, 0], [45, 1, 1, 1], [28, 0, 0, 1], [35, 1, 0, 1],
              [50, 0, 1, 1], [29, 1, 0, 0], [35, 0, 1, 0], [41, 1, 1, 0], [27, 0, 0, 0]])

y = np.array([0, 0, 1, 0, 1, 1, 0, 0, 1, 0])

try:
  k = int(input("Enter the value of k: "))
  if k <= 0:
    print("k must be a positive integer.")
  else:
    knn = KNeighborsClassifier(n_neighbors=k)
    knn.fit(X, y)
    symptom_features = []
    print("Enter symptom features (numerical values):")
    for i in range(X.shape[1]):
      while True:
        try:
          feature_value = float(input(f"Feature {i+1}: "))
          symptom_features.append(feature_value)
          break
        except ValueError:
          print("Invalid input. Please enter a numerical value.")
    new_patient_features = np.array([symptom_features])
    prediction = knn.predict(new_patient_features)
    if prediction[0] == 1:
      print("Prediction: The patient likely has the medical condition.")
    else:
      print("Prediction: The patient likely does not have the medical condition.")
except ValueError:
  print("Invalid input for k. Please enter an integer.")
except Exception as e:
  print(f"An error occurred: {e}")
